Book Management System

DB Tables
    Book
        id : INT AUTO_INCREMENT PRIMARY KEY,
        title : VARCHAR(255) NOT NULL,
        author_id : INT NOT NULL,
        category_id : INT NOT NULL,
        description : TEXT,
        cover_image : VARCHAR(255) DEFAULT NULL,
        created_at : TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at : TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    Author
        id : INT AUTO_INCREMENT PRIMARY KEY,
        name : VARCHAR(255) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    
    Category
        id : INT AUTO_INCREMENT PRIMARY KEY,
        name : VARCHAR(255) UNIQUE NOT NULL,
        description : TEXT DEFAULT NULL,
        created_at : TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at : TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP

UI
Book - CRUD - Homepage
    - Add
    - Edit
    - Delete
    (Pop up)
Author - CRUD
    - Add
    - Edit
    - Delete
    (Pop up)
Category - CRUD
    - Add
    - Edit
    - Delete
    (Pop up)


- php artisan make:migration create_(table-name)_table
- php artisan migrate(moving all created database table in database)
- php artisan make:Model(creating model and make a relationship to other table)
- php artisan make:controller (Controller name)
- creating route for BookController CRUD

- php artisan make:factory (ModelnameFactory)
- php artisan make:seeder databaseSeeder(creating dummy accounts)

-- CRUD


Clone from github repository ::
git clone https://github.com/username/repository.git
cd repository-name
composer install
cp .env.example .env
php artisan key:generate

Edit the .env file and update:
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=your_database
DB_USERNAME=your_username
DB_PASSWORD=your_password

php artisan migrate
php artisan serve

Push Project to repo::
git add .
git commit -m "Message...."
git push

Need to understand and improve::
AJAX Request
Fetch, axios and async await
API method (GET, POST, PUT, DELETE)
JSON.stringify and JSON.parse
HTTP Status Code (404, 201, etc....)
Database Rollback and backup

